#!/usr/bin/env python
# -*- coding: utf-8; py-indent-offset:4 -*-
################################################################################
# 
#  Copyright (C) 2014 Daniel Rodriguez
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
################################################################################
"""Subclass of AboutDialog, which is generated by wxFormBuilder."""
import appconstants
from utils.mvc import DynBind, DynamicClass
import wx

filemissing = ''' could not be opened.

That means it has been removed from the distribution package either running as an
installed/standalone application or running from source.

Please check the development site for it:

'''

class PanelAboutDocument(wx.Panel):
	
    def __init__( self, parent ):
        wx.Panel.__init__ ( self, parent, id = wx.ID_ANY, pos = wx.DefaultPosition, size = wx.Size( -1,-1 ), style = wx.TAB_TRAVERSAL )
		
        bSizer111 = wx.BoxSizer( wx.VERTICAL )
		
        self.m_textCtrlDocument = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( -1,-1 ), wx.TE_AUTO_URL|wx.TE_MULTILINE|wx.TE_READONLY )
        bSizer111.Add( self.m_textCtrlDocument, 1, wx.ALIGN_CENTER_HORIZONTAL|wx.EXPAND, 5 )
		
		
        self.SetSizer( bSizer111 )
        self.Layout()
        bSizer111.Fit( self )
	
    def __del__( self ):
        pass

class AboutDialogBase ( wx.Dialog ):
	
    def __init__( self, parent ):
        wx.Dialog.__init__ ( self, parent, id = wx.ID_ANY, title = u"About", pos = wx.DefaultPosition, size = wx.DefaultSize, style = wx.DEFAULT_DIALOG_STYLE )

        self.SetSizeHintsSz( wx.DefaultSize, wx.DefaultSize )

        bSizer8 = wx.BoxSizer( wx.VERTICAL )

        self.m_notebookAbout = wx.Notebook( self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_panelAbout = wx.Panel( self.m_notebookAbout, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.TAB_TRAVERSAL )
        bSizer10 = wx.BoxSizer( wx.VERTICAL )


        bSizer10.AddSpacer( ( 0, 0), 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL, 5 )

        self.m_staticTextAppNameVersion = wx.StaticText( self.m_panelAbout, wx.ID_ANY, u"MyLabel", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_CENTRE )
        self.m_staticTextAppNameVersion.Wrap( -1 )
        bSizer10.Add( self.m_staticTextAppNameVersion, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL, 5 )

        self.m_staticTextCopyright = wx.StaticText( self.m_panelAbout, wx.ID_ANY, u"MyLabel", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_CENTRE )
        self.m_staticTextCopyright.Wrap( -1 )
        bSizer10.Add( self.m_staticTextCopyright, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL, 5 )

        self.m_hyperlinkURL = wx.HyperlinkCtrl( self.m_panelAbout, wx.ID_ANY, u"wxFB Website", u"http://www.wxformbuilder.org", wx.DefaultPosition, wx.DefaultSize, wx.HL_ALIGN_CENTRE|wx.HL_DEFAULT_STYLE )
        bSizer10.Add( self.m_hyperlinkURL, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL, 5 )


        bSizer10.AddSpacer( ( 0, 0), 1, wx.EXPAND, 5 )


        self.m_panelAbout.SetSizer( bSizer10 )
        self.m_panelAbout.Layout()
        bSizer10.Fit( self.m_panelAbout )
        self.m_notebookAbout.AddPage( self.m_panelAbout, u"About", True )

        bSizer8.Add( self.m_notebookAbout, 1, wx.EXPAND |wx.ALL, 5 )

        self.m_buttonClose = wx.Button( self, wx.ID_ANY, u"Close", wx.DefaultPosition, wx.DefaultSize, 0 )
        bSizer8.Add( self.m_buttonClose, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL, 5 )


        self.SetSizer( bSizer8 )
        self.Layout()
        bSizer8.Fit( self )

        self.Centre( wx.BOTH )

    def __del__( self ):
        pass




# Implementing MainFrame
@DynamicClass(moddirs=['views', 'controllers'])
class AboutDialog(AboutDialogBase):

    def __init__(self, parent):
        AboutDialogBase.__init__(self, parent)
        self.font = wx.Font(10, wx.MODERN, wx.NORMAL, wx.NORMAL, False, u'Consolas')
        self.FillPanelAbout()
        self.AddDocuments()
        self.Fit() # Ensure the Dialog resizes to fit the added Panels
        self.Centre()

    def AddDocuments(self):
        for doc, srcdir in appconstants.about_datas:
            panel = PanelAboutDocument(self.m_notebookAbout)
            self.m_notebookAbout.AddPage(panel, text=doc, select=False)
            self.FillTextCtrl(panel.m_textCtrlDocument, doc, srcdir)
            panel.Layout()

    def FillTextCtrl(self, textctrl, fname, srcdir='appdir'):
        if srcdir == 'appdir':
            fpath = appconstants.getapppath(fname)
        else:
            fpath = appconstants.getdatapath(fname)
        try:
            f = open(fpath, 'r')
        except IOError:
            fcontent = fname + filemissing + appconstants.AppURL
        else:
            fcontent = f.read()
        textctrl.SetFont(self.font)
        textctrl.SetValue(fcontent)
        winDC = wx.ClientDC(textctrl)
        width, height = winDC.GetTextExtent('-' * 82)
        height *= 26
        textctrl.SetMinSize(wx.Size(width, height))

    def FillPanelAbout(self):
        # Application Name and Version
        appnameversion = appconstants.AppName + ' ' + appconstants.AppVersion
        self.m_staticTextAppNameVersion.SetLabel(appnameversion)

        # Copyright Year and Publisher
        appcopyright = '(C) ' + appconstants.AppYear + ' ' + appconstants.AppPublisher
        self.m_staticTextCopyright.SetLabel(appcopyright)

        # HyperLink URL
        self.m_hyperlinkURL.SetLabel(appconstants.AppURL)
        self.m_hyperlinkURL.SetURL(appconstants.AppURL)

        # Refresh panel Layout to ensure correct content and alignment of StaticText/HyperLinkURL controls
        self.m_panelAbout.Layout()

    @DynBind.EVT_BUTTON.Button.Close
    def OnButtonClickClose(self, event):
        event.Skip()
        self.EndModal(wx.ID_OK)
